{{!--
@group Geo
@desc Geo-location field type.  Displays a pin on a map with a searchbox.
@param startZoom set the initial zoom (default 12)
@param satellite set true for satellite view (default false)
@example location: {type: "location", title: "Location"}
@exampleValue 52.1,-0.5
--}}

<script type="text/javascript">
    var maplocation{{id}}, markerlocation{{id}};

    function onLoad_{{id}}() {
        {{#if value}}
            var myLatlng = new google.maps.LatLng({{value}});
            var mapOptions = {center: myLatlng,zoom: {{defaultVal options.startZoom '12'}} {{#if options.satellite}}, mapTypeId: google.maps.MapTypeId.SATELLITE{{/if}} };
        {{else}}
            var myLatlng = new google.maps.LatLng(51.5,-0.12);
            var mapOptions = {center: myLatlng,zoom: 12};
        {{/if}}

        maplocation{{id}} = new google.maps.Map(document.getElementById("maplocation{{id}}"), mapOptions);
        markerlocation{{id}} = new google.maps.Marker({position: myLatlng,map: maplocation{{id}}, draggable: true});

        google.maps.event.addListener(markerlocation{{id}}, "dragend", function(e) {
            $("#{{id}}").val(e.latLng.toUrlValue(5));
        });
    }
</script>

<div class="input-group" style="margin-bottom: 5px;">
    <span class="input-group-addon">Coordinates</span>
    <input type="text" class="form-control" name="{{field}}" size="40" value="{{#if value}}{{value}}{{else}}51.5,-0.12{{/if}}" id="{{id}}" placeholder="Coordinates" autocomplete="off">
</div>

<div id="maplocation{{id}}" style="width: 100%; height: 400px; border: 1px solid #CCC; border-radius: 3px; "></div>

<div class="input-group" style="margin: 5px 0 15px 0;">
    <input type="text" class="form-control" id="address_lookup{{id}}" placeholder="Look Up Address..." autocomplete="off">
    <span class="input-group-btn"><button class="btn btn-default" onclick="go_address_location{{id}}(); return false;">Search</button></span>
</div>

<div style="clear:both;"></div>

<script type="text/javascript">



  // check to see if mapsAdded is defined
  if (typeof mapsAdded !== "undefined") {
      // if it is, then a previous location field initialised the call for the maps js file
      // poll and run the load function when the script has downloaded
      var mapsPoll{{id}} = setInterval(function(){
          if (mapsReady) {
              clearInterval(mapsPoll{{id}});
              onLoad_{{id}}();
          }
      }, 1000);
  } else {
    // mapsAdded is undefined; grab the maps js file
    console.log('adding maps');

    var mapsReady = false;
    $.getScript('//maps.googleapis.com/maps/api/js?key={{options.googleMapKey}}', function(){
      mapsReady = true;
      onLoad_{{id}}();
    });

    // make sure there are no other ajax calls for the maps api js
    mapsAdded = true;
  }

  function go_address_location{{id}}(){
    $.getJSON("http://maps.googleapis.com/maps/api/geocode/json?address=" + $("#address_lookup{{id}}").val() + "&sensor=false", function(data) {
      if (data.results[0] && data.results[0].geometry) set_latlon_location{{id}}(data.results[0].geometry.location.lat, data.results[0].geometry.location.lng);
      else swal('Geo lookup', 'Unable to find a location for ' + $("#address_lookup{{id}}").val() + '. please be sure to include a country, eg London, UK');
    });
  }
  function set_latlon_location{{id}}(lat, lon){
    $("#{{id}}").val(lat.toFixed(5) + "," + lon.toFixed(5));
    markerlocation{{id}}.setPosition({ lat: lat, lng: lon});
    maplocation{{id}}.setCenter({ lat: lat, lng: lon});
  }
</script>
